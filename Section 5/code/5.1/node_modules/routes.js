
// routes.js
//
// Packt Publishing - Build a Network Application with Node
// Load routes based on HTTP method and path

var path = require("path"),
  fs = require("fs"),
  formidable = require("formidable");

exports.get = {

  // Index route
  "/": function(req, res) {

    var headerStr = "";

    res.writeHead(200, { "Content-Type": "text/html" });

    res.end('<form action="/upload" method="post" enctype="multipart/form-data">'+
      '<input type="file" name="user-photos" multiple="multiple">'+
      '<input type="submit" value="Upload">'+
      '</form>');

    for (header in req.headers) {
      headerStr += header + ": " + req.headers[header] + "\n";
    }
    console.log(headerStr);

  },

  // Image gallery route
  "/gallery": function(req, res) {

    res.writeHead(200, { "Content-Type": "text/html" });

    // List filenames of uploaded images
    fs.readdir("./img", function(err, files) {

      var html = "<p>Sorry, no images in the gallery.</p>";

      if (files.length) {
        html = "<h1>Image gallery</h1>";
        files.forEach(function(file) {
          // Skip files that are not images
          if (!/\.(jpeg|jpg|gif|png)$/.test(file)) return;
          html += "<br/>" + file + "<br/>";
        });
      }

      res.end(html);
    });

  }

};

exports.post = {

  // Image upload route
  "/upload" : function(req, res) {

    var i = 0,
      files = [],
      form = new formidable.IncomingForm(),

      deleteTempFile = function(filePath, cb) {
        fs.unlink(filePath, function (err) {
          if (err) return console.log(err);
          if (typeof cb == "function") cb();
        });
      },

      handleUploads = function() {

        // Redirect to gallery
        if (!files.length || i == files.length) {
          res.writeHead(302, { "Location": "/gallery" });
          res.end();
          return;
        }

        var currFile = files[i++],
          isImageType = /image\/(jpeg|gif|png)/.test(currFile.type),
          destFile = path.dirname(currFile.path) + "/" + currFile.name;

        // Uploaded file is not an image, so delete it
        if (!isImageType) return deleteTempFile(currFile.path, handleUploads);

        fs.exists(destFile, function(exists) {
          // Uploaded file already exists, so delete the duplicate
          if (exists) return deleteTempFile(currFile.path, handleUploads);

          // Rename the file to match the filename that the user uploaded
          fs.rename(currFile.path, destFile, function (err) {
            if (err) return console.log(err);
            handleUploads();
          });
        });
      };

    form.uploadDir = process.cwd() + "/img";
    form.on('file', function(field, file) { files.push(file); })
    form.on('end', handleUploads);
    form.parse(req);

  }
  
};
